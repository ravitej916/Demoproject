name: Terraform

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Apply (Manual Approval)
      if: github.ref == 'refs/heads/main'
      uses: actions/github-script@v4
      with:
        script: |
          const { Octokit } = require("@octokit/rest");
          const octokit = new Octokit({
            auth: process.env.GITHUB_TOKEN,
          });

          const { data: { id: check_run_id } } = await octokit.checks.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: 'Terraform Apply Approval',
            head_sha: context.sha,
            status: 'in_progress',
            output: {
              title: 'Manual approval needed',
              summary: 'Approve to apply the Terraform plan',
            },
          });

          const { data: review } = await octokit.pulls.createReview({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.number,
            event: 'REQUEST_CHANGES',
            body: 'Please approve this PR to apply the Terraform changes.',
          });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Terraform Apply
      if: github.event.review.state == 'approved'
      run: terraform apply -auto-approve
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
